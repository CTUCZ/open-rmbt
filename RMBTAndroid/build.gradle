apply plugin: 'com.android.application'

repositories {
	mavenCentral()
}


subprojects{
    evaluationDependsOn(':RMBTClient')
}

dependencies {
	compile project(':RMBTClient')
	compile project(':RMBTUtil')
	compile group: 'junit', name: 'junit', version: '4.12'
	compile 'com.google.android.gms:play-services-maps:10.2.4'
	compile 'dnsjava:dnsjava:2.1.7'
	compile 'net.sf.jopt-simple:jopt-simple:5.0.3'
	compile 'org.json:json:5.0.5'
}

def signDebugApp = true

// soure: https://developer.android.com/studio/publish/app-signing.html
// Create a variable called keystorePropertiesFile, and initialize the
// keystore.properties file in the RMBTAndroid folder.
// the keystore.properties files is excluded from the git repository
// for security reasons.
/* Demo file: (Path: [project root]/private/keystore.properties
storeFile=netztest.keystore
storePassword=<PASSWORD>
keyAlias=rtr
keyPassword=<PASSWORD>
* */
def keystorePropertiesFile = rootProject.file("private/keystore.properties")

// example keystore.properies file:
//    storePassword=myStorePassword
//    keyPassword=mykeyPassword
//    keyAlias=myKeyAlias
//    storeFile=myStoreFileLocation/myStore.keystore

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.3'

	sourceSets {
	    main {
            java {
                srcDirs = ['src']
                exclude 'at/alladin/rmbt/client/applet/RMBTApplet.java'
            }
	        manifest {
	            srcFile 'AndroidManifest.xml'
	        }
	        res {
	            srcDir 'res'
	        }
	        assets {
	            srcDir 'assets'
	        }
	    }
	}

    defaultConfig {
        applicationId "at.alladin.rmbt.android"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 30000
        versionName "3.0.0"
        buildConfigField "long", "BUILD_TIMESTAMP", System.currentTimeMillis() + "L"
    }

	lintOptions {
           abortOnError false
    }



    buildTypes {
        debug {
        	debuggable true
            minifyEnabled false

        }
		release {

		    signingConfigs {
        		config {
            			keyAlias keystoreProperties['keyAlias']
            			keyPassword keystoreProperties['keyPassword']
            			storeFile file(keystoreProperties['storeFile'])
            			storePassword keystoreProperties['storePassword']
        			}
    			}


			debuggable false
			minifyEnabled false

			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

			lintOptions {
				//disable 'MissingTranslation'
				//disable 'ExtraTranslation'
			}
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def finalName = versionCode + "-" + System.currentTimeMillis().toString() + "-" + getVersionNameFromGit() + ".apk"
                    if (getDirtyFromGit() == "true")
                        finalName = "dirty-" + finalName
                    output.outputFile = new File(output.outputFile.parent, finalName)
                }
            }
		}
	}
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}
}

